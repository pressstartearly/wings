name: Publish Docker Image

on:
  push:
    branches:
      - 'develop'

    tags:
      - 'v*'

jobs:
  push:
    name: Push
    runs-on: ubuntu-20.04

    # Always run against a tag, even if the commit into the tag has [docker skip] within the commit message.
    if: "!contains(github.ref, 'develop') || (!contains(github.event.head_commit.message, 'skip docker') && !contains(github.event.head_commit.message, 'docker skip'))"

    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Docker Meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/pterodactyl/wings

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Get Build Information
        id: build_info
        run: |
          echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Release Production Build
        uses: docker/build-push-action@v2
        if: "!contains(github.ref, 'develop')"
        with:
          build-args: |
            VERSION=${{ steps.build_info.outputs.version_tag }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Release Development Build
        uses: docker/build-push-action@v2
        if: "contains(github.ref, 'develop')"
        with:
          build-args: |
            VERSION=dev-${{ steps.build_info.outputs.short_sha }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
